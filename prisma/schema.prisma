generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model post {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  content   String?
  published Boolean  @default(false)
  authorId  Int
  user      user     @relation(fields: [authorId], references: [id], onDelete: NoAction, map: "Post_authorId_fkey")

  @@index([authorId], map: "Post_authorId_fkey")
}


model Post {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  content   String?  @db.Text
  published Boolean  @default(false)
  authorId  Int
  User      User     @relation(fields: [authorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Post_ibfk_1")

  @@index([authorId], map: "authorId")
}

model profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  userId Int     @unique(map: "Profile_userId_key")
  user   user    @relation(fields: [userId], references: [id], onDelete: NoAction, map: "Profile_userId_fkey")
}

model User {
  id      Int      @id @default(autoincrement())
  name    String?  @db.VarChar(255)
  email   String   @unique(map: "email") @db.VarChar(255)
  Post    Post[]
  Profile Profile?
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String? @db.Text
  userId Int     @unique(map: "userId")
  User   User    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Profile_ibfk_1")
}

model user {
  id      Int      @id
  email   String   @unique(map: "User_email_key") @db.VarChar(255)
  name    String?  @db.VarChar(255)
  post    post[]
  profile profile?
}
