generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Post {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  content   String?
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique @db.VarChar(255)
  name    String?  @db.VarChar(255)
  posts   Post[]
  profile Profile?
}

// model post {
//   id        Int      @id @default(autoincrement())
//   title     String   @db.VarChar(255)
//   createdAt DateTime @default(now()) @db.Timestamp(6)
//   content   String?
//   published Boolean  @default(false)
//   authorId  Int
//   user      user     @relation(fields: [authorId], references: [id], map: "Post_authorId_fkey")

//   @@index([authorId], map: "Post_authorId_fkey")
// }

// model profile {
//   id     Int     @id @default(autoincrement())
//   bio    String?
//   userId Int     @unique(map: "Profile_userId_key")
//   user   user    @relation(fields: [userId], references: [id], map: "Profile_userId_fkey")
// }

// model user {
//   id      Int      @id @default(autoincrement())
//   email   String   @unique(map: "User_email_key") @db.VarChar(255)
//   name    String?  @db.VarChar(255)
//   post    post[]
//   profile profile?
// }
